{"ast":null,"code":"// /api/new-meetup\n// POST/api/new-meetup\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const data = req.body; // connect returns a promise hence we can turn our handler function into async function to use await. This gives us connected client.\n\n    const client = await MongoClient.connect('mongodb+srv://jatinder:12345@cluster0.dnaxppe.mongodb.net/meetups?retryWrites=true&w=majority');\n    console.log(client); // on this client object, we can call db method to get hold of that database to which we are connecting here.\n\n    const db = client.db(); // now on this database, we can get access to our meetupscollections. Mongodb is a nosql database that works with collections full of documents. collections are kind of tables and documents are enteries in these tables.\n    // so we have collection that holds multiple documents.\n\n    const meetupsCollection = db.collection('meetups');\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result); // to close the database connection once we are done.\n\n    client.close(); // we need to use 'res' object to send back a response.\n\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/jatinderkaur/Downloads/React/react-NextJs/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","console","log","db","meetupsCollection","collection","result","insertOne","close","status","json","message"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACvB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CADuB,CAGvB;;AACA,UAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,+FAApB,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EALuB,CAOvB;;AACA,UAAMI,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX,CARuB,CAUvB;AACA;;AACA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BV,IAA5B,CAArB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ,EAhBuB,CAkBvB;;AACAP,IAAAA,MAAM,CAACS,KAAP,GAnBuB,CAqBvB;;AACAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACH;AACJ;;AAED,eAAelB,OAAf","sourcesContent":["// /api/new-meetup\n// POST/api/new-meetup\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n    if (req.method === 'POST') {\n        const data = req.body;\n\n        // connect returns a promise hence we can turn our handler function into async function to use await. This gives us connected client.\n        const client = await MongoClient.connect('mongodb+srv://jatinder:12345@cluster0.dnaxppe.mongodb.net/meetups?retryWrites=true&w=majority');\n        console.log(client);\n\n        // on this client object, we can call db method to get hold of that database to which we are connecting here.\n        const db = client.db();\n\n        // now on this database, we can get access to our meetupscollections. Mongodb is a nosql database that works with collections full of documents. collections are kind of tables and documents are enteries in these tables.\n        // so we have collection that holds multiple documents.\n        const meetupsCollection = db.collection('meetups');\n\n        const result = await meetupsCollection.insertOne(data);\n\n        console.log(result);\n\n        // to close the database connection once we are done.\n        client.close();\n\n        // we need to use 'res' object to send back a response.\n        res.status(201).json({ message: 'Meetup inserted!' });\n    }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}